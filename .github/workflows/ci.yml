name: CI

on:
  push:
    branches:
      - master
      - release-*
  pull_request:
    branches:
      - master
      - release-*

jobs:
  build:
    runs-on: ${{ matrix.runner_type }}
    continue-on-error: true
    strategy:
      matrix:
        test_task: ["check"]
        runner_type: [d4asv4]
        #runner_type: [ds2v2,ds2v3,d2dsv4,d2asv4,m5large,n2s2,ds3v2,ds4v2,ds5v2,f4s,c2s4,c5xlarge,f32s,f64s,ubuntu-20.04,f2s,f8s,f16s]
        node-version: [14.x]
    
    env:
      #### For stat collection
      runId: ${{ matrix.runner_type }}-${{ github.workflow }}
      artifactsDir: artifacts/${{ github.repository }}
      iostatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-iostat.txt
      vmstatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-vmstat.txt
      timingFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-timing.txt
      ##########################
        
    steps:
    #### Start stat collection
    - run: mkdir -p ${{ runner.temp }}/${{ env.artifactsDir }}
    - run: iostat -yxmt 1 > ${{ runner.temp }}/${{ env.iostatFile }} &
    - run: vmstat -n 1 > ${{ runner.temp }}/${{ env.vmstatFile }} &
    - run: date -R > ${{ runner.temp }}/${{ env.timingFile }}
    ##########################
    - uses: actions/checkout@v2
      with:
        fetch-depth: 5
    - name: Use node version ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Remove existing TypeScript
      run: |
        npm uninstall typescript --no-save
        npm uninstall tslint --no-save
    - run:  npm ci

    # Re: https://github.com/actions/setup-node/pull/125
    - name: Register Problem Matcher for TSC
      run: echo "##[add-matcher].github/tsc.json"

    - name: Tests
      run:  npm test -- --no-lint

    - name: Linter
      run:  npm run lint:ci

    - name: Adding playwright
      run: npm install --no-save --no-package-lock playwright

    #- name: Validate the browser can import TypeScript
    #  run: |
    #    npm install gulp -g
    #    gulp test-browser-integration

  #### Collect/upload stats
    - run: date -R >> ${{ runner.temp }}/${{ env.timingFile }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: perfdata
        path: ${{ runner.temp }}/${{ env.artifactsDir }}
        if-no-files-found: error
    ##########################

  process:
    name: Process Perf Data
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/runnerperf
          path: runnerperf
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/iostat-tool
          path: runnerperf/iostat-tool
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2  
        with:
          name: perfdata
          path: runnerperf/data
      - name: Prereqs
        run: sudo apt -y install datamash  
      - name: Process stats
        run: |
          cd runnerperf
          (cd iostat-tool && python setup.py develop)
          ls -l data
          script/dumpcsv.sh data output
          script/aggregate.sh output ${{ github.repository }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: summary-perfdata
          path: runnerperf/output/summary.csv
          if-no-files-found: error
